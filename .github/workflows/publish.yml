name: Build

on:
  push:
    branches: [main]
    paths-ignore:
        - '**/README.md'
        - '**/version.py'

jobs:
  deploy:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: '0'
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Get next version
      uses: anothrNick/github-tag-action@1.26.0
      id: bump_version
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: false
        RELEASE_BRANCHES: main
        DRY_RUN: true
    - name: Update app version
      if: ${{ steps.bump_version.outputs.new_tag != steps.bump_version.outputs.tag }}
      run: | 
        python src/leet2git/version.py ${{ steps.bump_version.outputs.new_tag }}
        git config user.email "yurirocha15@gmail.com"
        git config user.name "Yuri Rocha"
        git add src/leet2git/version.py
        git commit -m "bump version to ${{ steps.bump_version.outputs.new_tag }}"
    - name: Push to protected branch
      if: ${{ steps.bump_version.outputs.new_tag != steps.bump_version.outputs.tag }}
      uses: CasperWA/push-protected@v2
      with:
        token: ${{ secrets.PUSH_TO_PROTECTED_BRANCH }}
        branch: main
        unprotect_reviews: true
    - name: Bump version and push tag
      if: ${{ steps.bump_version.outputs.new_tag != steps.bump_version.outputs.tag }}
      uses: anothrNick/github-tag-action@1.26.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        WITH_V: true
        RELEASE_BRANCHES: main
    - name: Build package
      if: ${{ steps.bump_version.outputs.new_tag != steps.bump_version.outputs.tag }}
      run: python -m build
    - name: Publish package
      if: ${{ steps.bump_version.outputs.new_tag != steps.bump_version.outputs.tag }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
